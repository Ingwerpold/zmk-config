/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NOHOME 1
#define GAMING 2
#define LEFTL 3
#define RIGHTL 4
#define TRI 5

#define NOGAMING <DEFAULT LEFTL RIGHTL TRI NOHOME>



&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LEFTL RIGHTL>;
            then-layer = <TRI>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            layers = NOGAMING;
            bindings = <&kp ESC>;
        };
        
        combo_tab {
            timeout-ms = <50>;
            layers = NOGAMING;
            key-positions = <15 16>;
            bindings = <&kp TAB>;
        };
        
        combo_bsp {
            timeout-ms = <50>;
            layers = NOGAMING;
            key-positions = <21 22>;
            bindings = <&kp BSPC>;
        };
        
        combo_lalt {
            timeout-ms = <50>; 
            layers = NOGAMING;
            key-positions = <16 17>;
            bindings = <&kp LALT>;
        };
        
        combo_lgui {
            timeout-ms = <50>;
            layers = NOGAMING;
            key-positions = <17 18>;
            bindings = <&kp LGUI>;
        };

        combo_stickyshift {
            timeout-ms = <50>;
            layers = NOGAMING;
            key-positions = <27 28>;
            bindings = <&sk LSHFT>;
        };

        combo_capsword {
            timeout-ms = <50>;
            layers = NOGAMING;
            key-positions = <28 29>;
            bindings = <&caps_word>;
        };


        combo_gaming_esc {
            timeout-ms = <50>;
            layers = <GAMING>;
            key-positions = <33 34>;
            bindings = <&kp ESC>;
        };

    };
        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
	&none &kp TAB   &kp Q &kp W &kp E &kp R &kp T 					                  &kp Y &kp U        &kp I        &kp O       &kp P          &kp BSPC  &none
	      &kp LCTRL &bhm LGUI A &bhm LALT S &bhm LSHIFT D &bhm LCTRL F &kp G 	  	  &kp H &bhm RCTRL J &bhm RSHFT K &bhm LALT L &bhm RGUI SEMI &kp MINUS
	      &kp LSHFT &kp Z &kp X &kp C &kp V &kp B				                      &kp N &kp M        &kp CMMA     &kp DOT     &kp SLASH      &kp ESC
          				                        &kp LMETA &kp SPC &mo LEFTL  			 &kp RET &mo RIGHTL &kp LALT
		>;
		};

            no_homerow_layer {
		bindings = <
        &trans &trans	&trans     &trans       &trans     &trans     &trans                    &trans  &trans  &trans  &trans &trans   &trans &trans 
	           &trans   &kp A      &kp S        &kp D      &kp F      &trans                    &trans  &kp J   &kp K   &kp L  &kp QUOT &trans 
	           &trans   &trans     &trans       &trans     &trans     &trans                    &trans  &trans  &trans  &trans &trans   &trans 
					                                  &trans  &trans &trans 		&trans  &trans &trans
		>;
		};

        	gaming_layer {
		bindings = <
  &none &kp TAB   &kp Q &kp W &kp E &kp R &kp T 					                &kp Y &kp U &kp I    &kp O   &kp P     &kp BSPC  &none
        &kp LCTRL &kp A &kp S &kp D &kp F &kp G 		   	        	            &kp H &kp J &kp K    &kp L   &kp QUOT  &kp MINUS
	    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B        				                &kp N &kp M &kp CMMA &kp DOT &kp SLASH &kp ESC
          				          &kp LALT &kp SPC &kp NUMBER_3  		&kp RET &mo RIGHTL &mo LEFTL
		>;
		};

            left_layer {
		bindings = <
  &trans &trans	&kp EXCL        &kp AT     &kp HASH     &kp DLLR            &kp PRCNT            &kp CARET    &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR        &trans &trans 
         &trans	&kp FSLH        &kp RBKT   &kp RBRC     &kp RA(NON_US_BSLH) &kp RA(Q)            &kp MINUS    &kp APOS  &kp RA(N7) &kp RA(N0) &kp PIPE        &kp AT 
         &trans	&kp LS(FSLH)    &kp BSLH   &kp LS(PLUS) &kp RA(MINUS)       &kp LS(NON_US_BSLH)  &kp UNDER    &kp LBKT  &kp RA(N8) &kp RA(N9) &kp NON_US_BSLH &kp LS(NON_US_BSLH) 
					                            &trans    &trans  &trans  &trans &trans &trans
		>;
        };

       	    right_layer {
		bindings = <
	&trans &trans	&kp NUM_1  &kp NUM_2    &kp NUM_3  &kp NUM_4  &kp NUM_5                 &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 &trans &trans
	       &trans	&trans     &trans       &trans     &trans     &trans                    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans    &trans
	       &trans	&trans     &trans       &trans     &trans     &trans                    &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans    &trans
					                              &trans &trans &trans 		&trans  &trans &trans
		>;
		};
			
		
		    tri_layer {
		bindings = <
  &trans &trans	&kp F1      &kp F2    &kp F3      &kp F4    &kp F5 			           &kp F6       &kp F7        &kp F8        &kp F9     &kp F10     &trans &trans
         &trans	&kp F11     &kp F12   &trans      &trans    &trans  				   &trans       &kp PG_UP     &kp K_VOL_UP  &kp K_MUTE &tog GAMING &trans
         &trans	&bt BT_CLR  &bt BT_NXT &bt BT_PRV &trans    &bootloader                &bootloader  &kp PG_DN     &kp K_VOL_DN  &trans     &tog NOHOME &trans
					                              &trans  &trans &trans  					&trans &trans  &trans
		>;
		};	

        
        
	};
};
